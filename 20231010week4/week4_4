希尔排序
思路：
    选定一个整数作为增量，把待排序文件中的所有数据分组，以每个距离的等差数列为一组，
    对每一组进行排序，将增量缩小，继续分组排序并重复上述动作，直到增量缩小为1，排
    序结束。
    每次排序让数组接近有序的过程叫做预排序，最后一次插入是直接插入排序
代码：

def shell_sort(arr):
    n = len(arr)
    gap = n // 2
    while gap > 0:
        for i in range(gap, n):
            temp = arr[i]
            j = i
            while j >= gap and arr[j - gap] > temp:
                arr[j] = arr[j - gap]
                j -= gap
            arr[j] = temp
        gap = gap // 2
    return arr
时间复杂度：
    当数据接近顺序排序时，时间复杂度接近O(n),数据为逆序时，复杂度为O(n^2)。
    平均时间复杂度为O(n^1.3)
空间复杂度：O(1)